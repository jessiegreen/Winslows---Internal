<?php

namespace Proxies\__CG__\Entities\Company\Website;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class Role extends \Entities\Company\Website\Role implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }

    /** @private */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    
    public function addPrivilege(\Entities\Company\Website\Role\Privilege $Privilege)
    {
        $this->__load();
        return parent::addPrivilege($Privilege);
    }

    public function getPrivileges()
    {
        $this->__load();
        return parent::getPrivileges();
    }

    public function addResource(\Entities\Company\Website\Resource $Resource)
    {
        $this->__load();
        return parent::addResource($Resource);
    }

    public function removeResource(\Entities\Company\Website\Resource $Resource)
    {
        $this->__load();
        return parent::removeResource($Resource);
    }

    public function getResources()
    {
        $this->__load();
        return parent::getResources();
    }

    public function addAccount(\Entities\Company\Website\Account\AccountAbstract $Account)
    {
        $this->__load();
        return parent::addAccount($Account);
    }

    public function removeAccount(\Entities\Company\Website\Account\AccountAbstract $Account)
    {
        $this->__load();
        return parent::removeAccount($Account);
    }

    public function getAccounts()
    {
        $this->__load();
        return parent::getAccounts();
    }

    public function setWebsite(\Entities\Company\Website\WebsiteAbstract $Website)
    {
        $this->__load();
        return parent::setWebsite($Website);
    }

    public function getWebsite()
    {
        $this->__load();
        return parent::getWebsite();
    }

    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int) $this->_identifier["id"];
        }
        $this->__load();
        return parent::getId();
    }

    public function getName()
    {
        $this->__load();
        return parent::getName();
    }

    public function setName($name)
    {
        $this->__load();
        return parent::setName($name);
    }

    public function getDescription()
    {
        $this->__load();
        return parent::getDescription();
    }

    public function setDescription($description)
    {
        $this->__load();
        return parent::setDescription($description);
    }

    public function toString()
    {
        $this->__load();
        return parent::toString();
    }

    public function populate(array $array)
    {
        $this->__load();
        return parent::populate($array);
    }

    public function updated()
    {
        $this->__load();
        return parent::updated();
    }

    public function getCreated()
    {
        $this->__load();
        return parent::getCreated();
    }

    public function setCreated(\DateTime $created)
    {
        $this->__load();
        return parent::setCreated($created);
    }

    public function getUpdated()
    {
        $this->__load();
        return parent::getUpdated();
    }

    public function filterCollectionByfield(\Doctrine\Common\Collections\ArrayCollection $ArrayCollection, $field, $value)
    {
        $this->__load();
        return parent::filterCollectionByfield($ArrayCollection, $field, $value);
    }

    public function getCrudPermissions()
    {
        $this->__load();
        return parent::getCrudPermissions();
    }

    public function getCrudPermission($permission_name)
    {
        $this->__load();
        return parent::getCrudPermission($permission_name);
    }

    public function getRelationshipCrudPermissions($collection_property_name)
    {
        $this->__load();
        return parent::getRelationshipCrudPermissions($collection_property_name);
    }

    public function getRelationshipTypeName($related_property_name)
    {
        $this->__load();
        return parent::getRelationshipTypeName($related_property_name);
    }

    public function getRelationshipClass($related_property_name)
    {
        $this->__load();
        return parent::getRelationshipClass($related_property_name);
    }

    public function getRelationshipClassCrudPermissions($related_property_name)
    {
        $this->__load();
        return parent::getRelationshipClassCrudPermissions($related_property_name);
    }

    public function getCrudUrl()
    {
        $this->__load();
        return parent::getCrudUrl();
    }

    public function getRelationshipCrudUrl($related_property_name)
    {
        $this->__load();
        return parent::getRelationshipCrudUrl($related_property_name);
    }

    public function toArray()
    {
        $this->__load();
        return parent::toArray();
    }

    public function getClassName()
    {
        $this->__load();
        return parent::getClassName();
    }

    public function getClass()
    {
        $this->__load();
        return parent::getClass();
    }

    public function getEditForm()
    {
        $this->__load();
        return parent::getEditForm();
    }

    public function getEditFormClass()
    {
        $this->__load();
        return parent::getEditFormClass();
    }

    public function getEditSubform()
    {
        $this->__load();
        return parent::getEditSubform();
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'id', 'name', 'description', 'created', 'updated', 'Privileges', 'Resources', 'Accounts', 'Website');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields AS $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}