<?php

namespace Proxies\__CG__\Entities;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class ConfigurableProductOptionGroup extends \Entities\ConfigurableProductOptionGroup implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }

    /** @private */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    
    public function addConfigurableProduct(\Entities\ConfigurableProduct $ConfigurableProduct)
    {
        $this->__load();
        return parent::addConfigurableProduct($ConfigurableProduct);
    }

    public function removeConfigurableProduct(\Entities\ConfigurableProduct $ConfigurableProduct)
    {
        $this->__load();
        return parent::removeConfigurableProduct($ConfigurableProduct);
    }

    public function getConfigurableProducts()
    {
        $this->__load();
        return parent::getConfigurableProducts();
    }

    public function setConfigurableProductOptionCategory(\Entities\ConfigurableProductOptionCategory $ConfigurableProductOptionCategory)
    {
        $this->__load();
        return parent::setConfigurableProductOptionCategory($ConfigurableProductOptionCategory);
    }

    public function getConfigurableProductOptionCategory()
    {
        $this->__load();
        return parent::getConfigurableProductOptionCategory();
    }

    public function addConfigurableProductOption(\Entities\ConfigurableProductOption $ConfigurableProductOption)
    {
        $this->__load();
        return parent::addConfigurableProductOption($ConfigurableProductOption);
    }

    public function getConfigurableProductOptions()
    {
        $this->__load();
        return parent::getConfigurableProductOptions();
    }

    public function getLength()
    {
        $this->__load();
        return parent::getLength();
    }

    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int) $this->_identifier["id"];
        }
        $this->__load();
        return parent::getId();
    }

    public function getIndex()
    {
        $this->__load();
        return parent::getIndex();
    }

    public function setIndex($index)
    {
        $this->__load();
        return parent::setIndex($index);
    }

    public function getName()
    {
        $this->__load();
        return parent::getName();
    }

    public function setName($name)
    {
        $this->__load();
        return parent::setName($name);
    }

    public function getCode()
    {
        $this->__load();
        return parent::getCode();
    }

    public function setCode($code)
    {
        $this->__load();
        return parent::setCode($code);
    }

    public function getMaxCount()
    {
        $this->__load();
        return parent::getMaxCount();
    }

    public function setMaxCount($max_count)
    {
        $this->__load();
        return parent::setMaxCount($max_count);
    }

    public function getDescription()
    {
        $this->__load();
        return parent::getDescription();
    }

    public function setDescription($description)
    {
        $this->__load();
        return parent::setDescription($description);
    }

    public function hasRequiredOption()
    {
        $this->__load();
        return parent::hasRequiredOption();
    }

    public function getRequiredOptionIdsArray()
    {
        $this->__load();
        return parent::getRequiredOptionIdsArray();
    }

    public function populate(array $array)
    {
        $this->__load();
        return parent::populate($array);
    }

    public function toArray()
    {
        $this->__load();
        return parent::toArray();
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'id', 'index_string', 'code', 'name', 'description', 'maxcount', 'ConfigurableProductOptionCategory', 'ConfigurableProductOptions', 'ConfigurableProducts');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields AS $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}