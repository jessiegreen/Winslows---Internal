<?php

namespace Proxies\__CG__\Entities\Company\Lead\Quote;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class Item extends \Entities\Company\Lead\Quote\Item implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }

    /** @private */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int) $this->_identifier["id"];
        }
        $this->__load();
        return parent::getId();
    }

    public function setQuote(\Entities\Company\Lead\Quote $Quote)
    {
        $this->__load();
        return parent::setQuote($Quote);
    }

    public function getQuote()
    {
        $this->__load();
        return parent::getQuote();
    }

    public function setDelivery(\Entities\Company\Lead\Quote\Item\Delivery $Delivery)
    {
        $this->__load();
        return parent::setDelivery($Delivery);
    }

    public function clearDelivery()
    {
        $this->__load();
        return parent::clearDelivery();
    }

    public function getDelivery()
    {
        $this->__load();
        return parent::getDelivery();
    }

    public function setInstance(\Entities\Company\Supplier\Product\Instance\InstanceAbstract $Instance)
    {
        $this->__load();
        return parent::setInstance($Instance);
    }

    public function getInstance()
    {
        $this->__load();
        return parent::getInstance();
    }

    public function setName($name)
    {
        $this->__load();
        return parent::setName($name);
    }

    public function getName()
    {
        $this->__load();
        return parent::getName();
    }

    public function setQuantity($quantity)
    {
        $this->__load();
        return parent::setQuantity($quantity);
    }

    public function getQuantity()
    {
        $this->__load();
        return parent::getQuantity();
    }

    public function setSaleType(\Entities\Company\Lead\Quote\Item\SaleType\SaleTypeAbstract $SaleType)
    {
        $this->__load();
        return parent::setSaleType($SaleType);
    }

    public function getSaleType()
    {
        $this->__load();
        return parent::getSaleType();
    }

    public function isRtoSaleType()
    {
        $this->__load();
        return parent::isRtoSaleType();
    }

    public function getSaleTypeDisplay()
    {
        $this->__load();
        return parent::getSaleTypeDisplay();
    }

    public function getDeliveryTypes()
    {
        $this->__load();
        return parent::getDeliveryTypes();
    }

    public function getDeliveryTypesKeyNameArray()
    {
        $this->__load();
        return parent::getDeliveryTypesKeyNameArray();
    }

    public function getTotalWithFeesPrice()
    {
        $this->__load();
        return parent::getTotalWithFeesPrice();
    }

    public function getTotalWithFeesEachPrice()
    {
        $this->__load();
        return parent::getTotalWithFeesEachPrice();
    }

    public function getDueAtSaleEachPrice()
    {
        $this->__load();
        return parent::getDueAtSaleEachPrice();
    }

    public function getDueAtSaleTotalPrice()
    {
        $this->__load();
        return parent::getDueAtSaleTotalPrice();
    }

    public function getRemainderDueEachPrice()
    {
        $this->__load();
        return parent::getRemainderDueEachPrice();
    }

    public function getRemainderDueTotalPrice()
    {
        $this->__load();
        return parent::getRemainderDueTotalPrice();
    }

    public function getFeesEachPrice()
    {
        $this->__load();
        return parent::getFeesEachPrice();
    }

    public function getFeesTotalPrice()
    {
        $this->__load();
        return parent::getFeesTotalPrice();
    }

    public function getPaymentsTotalAmountEachPrice()
    {
        $this->__load();
        return parent::getPaymentsTotalAmountEachPrice();
    }

    public function getPaymentsTotalAmountTotalPrice()
    {
        $this->__load();
        return parent::getPaymentsTotalAmountTotalPrice();
    }

    public function getDownPaymentEachPrice()
    {
        $this->__load();
        return parent::getDownPaymentEachPrice();
    }

    public function getRemainingPaymentsCount()
    {
        $this->__load();
        return parent::getRemainingPaymentsCount();
    }

    public function getRemainingPaymentsAmountEach()
    {
        $this->__load();
        return parent::getRemainingPaymentsAmountEach();
    }

    public function getRemainingPaymentsAmountTotal()
    {
        $this->__load();
        return parent::getRemainingPaymentsAmountTotal();
    }

    public function getDownPaymentTotalPrice()
    {
        $this->__load();
        return parent::getDownPaymentTotalPrice();
    }

    public function getProductEachPrice()
    {
        $this->__load();
        return parent::getProductEachPrice();
    }

    public function getProductTotalPrice()
    {
        $this->__load();
        return parent::getProductTotalPrice();
    }

    public function isValid()
    {
        $this->__load();
        return parent::isValid();
    }

    public function updated()
    {
        $this->__load();
        return parent::updated();
    }

    public function getCreated()
    {
        $this->__load();
        return parent::getCreated();
    }

    public function setCreated(\DateTime $created)
    {
        $this->__load();
        return parent::setCreated($created);
    }

    public function getUpdated()
    {
        $this->__load();
        return parent::getUpdated();
    }

    public function populate(array $array)
    {
        $this->__load();
        return parent::populate($array);
    }

    public function toArray()
    {
        $this->__load();
        return parent::toArray();
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'id', 'quantity', 'name', 'created', 'updated', 'SaleType', 'Quote', 'Instance', 'Delivery');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields AS $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}